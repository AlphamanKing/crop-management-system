import pandas as pd
import numpy as np
import joblib
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score, classification_report

# Load dataset
data = pd.read_csv("Crop_recommendation.csv")

# Encode target labels (Crop names)
label_encoder = LabelEncoder()
data['label'] = label_encoder.fit_transform(data['label'])

# Save label mappings
label_mapping = dict(zip(label_encoder.classes_, label_encoder.transform(label_encoder.classes_)))
joblib.dump(label_mapping, "crop_label_mapping.joblib")

# Define features and target
X = data.drop(columns=["label"])  # All columns except 'label'
y = data["label"]  # Target variable (crop labels)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Random Forest model
rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)

# Model evaluation
y_pred = rf_model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Model Accuracy: {accuracy * 100:.2f}%")
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# Save trained model as .joblib
joblib.dump(rf_model, "crop_recommendation_model.joblib")

print("\n✅ Model training complete! The model is saved as 'crop_recommendation_model.joblib'")
print("✅ Label mapping saved as 'crop_label_mapping.joblib'")
